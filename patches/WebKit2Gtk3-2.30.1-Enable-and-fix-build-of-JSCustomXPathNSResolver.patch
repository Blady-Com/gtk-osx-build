From 88fc37d02280e3be62b76af5fd11adeb21e8f95a Mon Sep 17 00:00:00 2001
From: John Ralls <jralls@ceridwen.us>
Date: Mon, 9 Nov 2020 09:24:52 -0800
Subject: [PATCH 3/7] Enable and fix build of JSCustomXPathNSResolver.

Required by JSDocument and JSDOMConvertXPathNSResolver.
---
 Source/WebCore/Sources.txt                               |  2 +-
 Source/WebCore/bindings/js/JSCustomXPathNSResolver.cpp   | 13 ++++++-------
 Source/WebCore/bindings/js/JSDOMConvertXPathNSResolver.h |  2 +-
 3 files changed, 8 insertions(+), 9 deletions(-)

diff --git a/Source/WebCore/Sources.txt b/Source/WebCore/Sources.txt
index 1cecdb0..a05c306 100644
--- a/Source/WebCore/Sources.txt
+++ b/Source/WebCore/Sources.txt
@@ -3124,7 +3124,7 @@ JSNavigatorStorageQuota.cpp
 JSNavigatorWebDriver.cpp
 JSNode.cpp
 JSNodeFilter.cpp
-JSCustomXPathNSResolver.cpp
+bindings/js/JSCustomXPathNSResolver.cpp
 JSNodeIterator.cpp
 JSNodeList.cpp
 JSNonDocumentTypeChildNode.cpp
diff --git a/Source/WebCore/bindings/js/JSCustomXPathNSResolver.cpp b/Source/WebCore/bindings/js/JSCustomXPathNSResolver.cpp
index 4903853..57c28bd 100644
--- a/Source/WebCore/bindings/js/JSCustomXPathNSResolver.cpp
+++ b/Source/WebCore/bindings/js/JSCustomXPathNSResolver.cpp
@@ -74,11 +74,10 @@ String JSCustomXPathNSResolver::lookupNamespaceURI(const String& prefix)
     VM& vm = lexicalGlobalObject->vm();
         
     JSValue function = m_customResolver->get(lexicalGlobalObject, Identifier::fromString(vm, "lookupNamespaceURI"));
-    CallData callData;
-    CallType callType = getCallData(vm, function, callData);
-    if (callType == CallType::None) {
-        callType = m_customResolver->methodTable(vm)->getCallData(m_customResolver.get(), callData);
-        if (callType == CallType::None) {
+    CallData callData{getCallData(vm, function)};
+    if (callData.type == CallData::Type::None) {
+        callData = m_customResolver->methodTable(vm)->getCallData(m_customResolver.get());
+        if (callData.type == CallData::Type::None) {
             if (PageConsoleClient* console = m_globalObject->wrapped().console())
                 console->addMessage(MessageSource::JS, MessageLevel::Error, "XPathNSResolver does not have a lookupNamespaceURI method."_s);
             return String();
@@ -89,11 +88,11 @@ String JSCustomXPathNSResolver::lookupNamespaceURI(const String& prefix)
     Ref<JSCustomXPathNSResolver> protectedThis(*this);
 
     MarkedArgumentBuffer args;
-    args.append(jsStringWithCache(lexicalGlobalObject, prefix));
+    args.append(jsStringWithCache(vm, prefix));
     ASSERT(!args.hasOverflowed());
 
     NakedPtr<JSC::Exception> exception;
-    JSValue retval = JSExecState::call(lexicalGlobalObject, function, callType, callData, m_customResolver.get(), args, exception);
+    JSValue retval = JSExecState::call(lexicalGlobalObject, function, callData, m_customResolver.get(), args, exception);
 
     String result;
     if (exception)
diff --git a/Source/WebCore/bindings/js/JSDOMConvertXPathNSResolver.h b/Source/WebCore/bindings/js/JSDOMConvertXPathNSResolver.h
index f57ea45..1fcd2c1 100644
--- a/Source/WebCore/bindings/js/JSDOMConvertXPathNSResolver.h
+++ b/Source/WebCore/bindings/js/JSDOMConvertXPathNSResolver.h
@@ -48,7 +48,7 @@ template<> struct Converter<IDLInterface<XPathNSResolver>> : DefaultConverter<ID
         if (object->inherits<JSXPathNSResolver>(vm))
             return &JSC::jsCast<JSXPathNSResolver*>(object)->wrapped();
 
-        return JSCustomXPathNSResolver::create(object, JSC::jsCast<JSDOMGlobalObject*>(&lexicalGlobalObject));
+        return JSCustomXPathNSResolver::create(lexicalGlobalObject, value).releaseReturnValue();
     }
 };
 
-- 
2.2.2

